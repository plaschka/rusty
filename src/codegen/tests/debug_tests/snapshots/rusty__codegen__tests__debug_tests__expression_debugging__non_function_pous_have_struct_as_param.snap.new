---
source: src/codegen/tests/debug_tests/expression_debugging.rs
assertion_line: 100
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%myProg = type { i32 }
%fb = type { i32 }

@myProg_instance = global %myProg zeroinitializer, !dbg !0
@__fb__init = unnamed_addr constant %fb zeroinitializer, !dbg !9

define void @myProg(%myProg* %0) !dbg !17 {
entry:
  call void @llvm.dbg.declare(metadata %myProg* %0, metadata !20, metadata !DIExpression()), !dbg !21
  %x = getelementptr inbounds %myProg, %myProg* %0, i32 0, i32 0, !dbg !21
  %load_x = load i32, i32* %x, align 4, !dbg !21
  %tmpVar = add i32 %load_x, 2, !dbg !21
  store i32 %tmpVar, i32* %x, align 4, !dbg !21
  ret void, !dbg !21
}

define void @fb(%fb* %0) !dbg !22 {
entry:
  call void @llvm.dbg.declare(metadata %fb* %0, metadata !23, metadata !DIExpression()), !dbg !24
  %x = getelementptr inbounds %fb, %fb* %0, i32 0, i32 0, !dbg !24
  %load_x = load i32, i32* %x, align 4, !dbg !24
  %tmpVar = add i32 %load_x, 2, !dbg !24
  store i32 %tmpVar, i32* %x, align 4, !dbg !24
  ret void, !dbg !24
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!14}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "myProg", scope: !2, file: !2, line: 2, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "main", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "myProg", scope: !2, file: !2, line: 2, size: 32, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myProg")
!4 = !{!5}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2, file: !2, line: 4, baseType: !6, size: 32, align: 32, flags: DIFlagPublic)
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "DINT", scope: !7, file: !7, line: 10, baseType: !8, align: 32)
!7 = !DIFile(filename: "<internal>", directory: "")
!8 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(name: "__fb__init", scope: !2, file: !2, line: 9, type: !11, isLocal: false, isDefinition: true)
!11 = !DICompositeType(tag: DW_TAG_structure_type, name: "fb", scope: !2, file: !2, line: 9, size: 32, align: 64, flags: DIFlagPublic, elements: !12, identifier: "fb")
!12 = !{!13}
!13 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2, file: !2, line: 11, baseType: !6, size: 32, align: 32, flags: DIFlagPublic)
!14 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !15, globals: !16, splitDebugInlining: false)
!15 = !{}
!16 = !{!0, !9}
!17 = distinct !DISubprogram(name: "myProg", linkageName: "myProg", scope: !2, file: !2, line: 2, type: !18, scopeLine: 6, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !15)
!18 = !DISubroutineType(flags: DIFlagPublic, types: !19)
!19 = !{null, !8}
!20 = !DILocalVariable(name: "myProg", scope: !17, file: !2, line: 2, type: !3)
!21 = !DILocation(line: 6, column: 12, scope: !17)
!22 = distinct !DISubprogram(name: "fb", linkageName: "fb", scope: !2, file: !2, line: 9, type: !18, scopeLine: 13, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !15)
!23 = !DILocalVariable(name: "fb", scope: !22, file: !2, line: 9, type: !11)
!24 = !DILocation(line: 13, column: 12, scope: !22)

