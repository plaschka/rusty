---
source: src/codegen/tests/debug_tests/expression_debugging.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%myPrg = type {}
%myFb = type {}

@myPrg_instance = global %myPrg zeroinitializer, !dbg !0
@__myFb__init = unnamed_addr constant %myFb zeroinitializer, !dbg !11

define i32 @myFunc() !dbg !21 {
entry:
  %myFunc = alloca i32, align 4, !dbg !24
  %a = alloca i32, align 4, !dbg !24
  %b = alloca i32, align 4, !dbg !24
  %c = alloca i32, align 4, !dbg !24
  call void @llvm.dbg.declare(metadata i32* %a, metadata !25, metadata !DIExpression()), !dbg !26
  store i32 0, i32* %a, align 4, !dbg !24
  call void @llvm.dbg.declare(metadata i32* %b, metadata !27, metadata !DIExpression()), !dbg !28
  store i32 0, i32* %b, align 4, !dbg !24
  call void @llvm.dbg.declare(metadata i32* %c, metadata !29, metadata !DIExpression()), !dbg !30
  store i32 0, i32* %c, align 4, !dbg !24
  call void @llvm.dbg.declare(metadata i32* %myFunc, metadata !31, metadata !DIExpression()), !dbg !32
  store i32 0, i32* %myFunc, align 4, !dbg !24
  %myFunc_ret = load i32, i32* %myFunc, align 4, !dbg !24
  ret i32 %myFunc_ret, !dbg !24
}

define void @myPrg(%myPrg* %0) !dbg !33 {
entry:
  call void @llvm.dbg.declare(metadata %myPrg* %0, metadata !34, metadata !DIExpression()), !dbg !35
  %a = alloca i32, align 4, !dbg !35
  %b = alloca i32, align 4, !dbg !35
  %c = alloca i32, align 4, !dbg !35
  call void @llvm.dbg.declare(metadata i32* %a, metadata !36, metadata !DIExpression()), !dbg !37
  store i32 0, i32* %a, align 4, !dbg !35
  call void @llvm.dbg.declare(metadata i32* %b, metadata !38, metadata !DIExpression()), !dbg !39
  store i32 0, i32* %b, align 4, !dbg !35
  call void @llvm.dbg.declare(metadata i32* %c, metadata !40, metadata !DIExpression()), !dbg !41
  store i32 0, i32* %c, align 4, !dbg !35
  ret void, !dbg !35
}

define void @myFb(%myFb* %0) !dbg !42 {
entry:
  call void @llvm.dbg.declare(metadata %myFb* %0, metadata !43, metadata !DIExpression()), !dbg !44
  %a = alloca i32, align 4, !dbg !44
  %b = alloca i32, align 4, !dbg !44
  %c = alloca i32, align 4, !dbg !44
  call void @llvm.dbg.declare(metadata i32* %a, metadata !45, metadata !DIExpression()), !dbg !46
  store i32 0, i32* %a, align 4, !dbg !44
  call void @llvm.dbg.declare(metadata i32* %b, metadata !47, metadata !DIExpression()), !dbg !48
  store i32 0, i32* %b, align 4, !dbg !44
  call void @llvm.dbg.declare(metadata i32* %c, metadata !49, metadata !DIExpression()), !dbg !50
  store i32 0, i32* %c, align 4, !dbg !44
  ret void, !dbg !44
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!18}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "myPrg", scope: !2, file: !2, line: 5, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "main", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "myPrg", scope: !2, file: !2, line: 5, size: 96, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myPrg")
!4 = !{!5, !9, !10}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2, file: !2, line: 6, baseType: !6, size: 32, align: 32, flags: DIFlagPublic)
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "dint", scope: !7, file: !7, line: 10, baseType: !8, align: 32)
!7 = !DIFile(filename: "<internal>", directory: "")
!8 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2, file: !2, line: 6, baseType: !6, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2, file: !2, line: 6, baseType: !6, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!11 = !DIGlobalVariableExpression(var: !12, expr: !DIExpression())
!12 = distinct !DIGlobalVariable(name: "__myFb__init", scope: !2, file: !2, line: 8, type: !13, isLocal: false, isDefinition: true)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "myFb", scope: !2, file: !2, line: 8, size: 96, align: 64, flags: DIFlagPublic, elements: !14, identifier: "myFb")
!14 = !{!15, !16, !17}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2, file: !2, line: 9, baseType: !6, size: 32, align: 32, flags: DIFlagPublic)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2, file: !2, line: 9, baseType: !6, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2, file: !2, line: 9, baseType: !6, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!18 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !19, globals: !20, splitDebugInlining: false)
!19 = !{}
!20 = !{!0, !11}
!21 = distinct !DISubprogram(name: "myFunc", linkageName: "myFunc", scope: !2, file: !2, line: 2, type: !22, scopeLine: 4, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !19)
!22 = !DISubroutineType(flags: DIFlagPublic, types: !23)
!23 = !{null}
!24 = !DILocation(line: 4, column: 8, scope: !21)
!25 = !DILocalVariable(name: "a", scope: !21, file: !2, line: 3, type: !6, align: 32)
!26 = !DILocation(line: 3, column: 12, scope: !21)
!27 = !DILocalVariable(name: "b", scope: !21, file: !2, line: 3, type: !6, align: 32)
!28 = !DILocation(line: 3, column: 14, scope: !21)
!29 = !DILocalVariable(name: "c", scope: !21, file: !2, line: 3, type: !6, align: 32)
!30 = !DILocation(line: 3, column: 16, scope: !21)
!31 = !DILocalVariable(name: "myFunc", scope: !21, file: !2, line: 2, type: !6, align: 32)
!32 = !DILocation(line: 2, column: 17, scope: !21)
!33 = distinct !DISubprogram(name: "myPrg", linkageName: "myPrg", scope: !2, file: !2, line: 5, type: !22, scopeLine: 7, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !19)
!34 = !DILocalVariable(name: "myPrg", scope: !33, file: !2, line: 5, type: !3)
!35 = !DILocation(line: 7, column: 8, scope: !33)
!36 = !DILocalVariable(name: "a", scope: !33, file: !2, line: 6, type: !6, align: 32)
!37 = !DILocation(line: 6, column: 17, scope: !33)
!38 = !DILocalVariable(name: "b", scope: !33, file: !2, line: 6, type: !6, align: 32)
!39 = !DILocation(line: 6, column: 19, scope: !33)
!40 = !DILocalVariable(name: "c", scope: !33, file: !2, line: 6, type: !6, align: 32)
!41 = !DILocation(line: 6, column: 21, scope: !33)
!42 = distinct !DISubprogram(name: "myFb", linkageName: "myFb", scope: !2, file: !2, line: 8, type: !22, scopeLine: 10, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !19)
!43 = !DILocalVariable(name: "myFb", scope: !42, file: !2, line: 8, type: !13)
!44 = !DILocation(line: 10, column: 8, scope: !42)
!45 = !DILocalVariable(name: "a", scope: !42, file: !2, line: 9, type: !6, align: 32)
!46 = !DILocation(line: 9, column: 17, scope: !42)
!47 = !DILocalVariable(name: "b", scope: !42, file: !2, line: 9, type: !6, align: 32)
!48 = !DILocation(line: 9, column: 19, scope: !42)
!49 = !DILocalVariable(name: "c", scope: !42, file: !2, line: 9, type: !6, align: 32)
!50 = !DILocation(line: 9, column: 21, scope: !42)

